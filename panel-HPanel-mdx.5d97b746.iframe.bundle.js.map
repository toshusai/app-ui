{"version":3,"file":"panel-HPanel-mdx.5d97b746.iframe.bundle.js","mappings":";;;AAQA;;;;;;AAMA;;;;;;;;;;ACCA;;;;;AAOA;;;;;;ACPA;;;;;AAOA;;;;;;;ACVA;;;;AAIA;;;AAGA;;;AAGA;;;AAKA;;AAEA;;;;AAIA;;;;;;;;;;;;;;;ACnBA;AACA;;;;;;;;;;AAUA;;;;;;;;;;AChBA;;;;;;;;AAUA;AACA;;AAGA;AACA;;;;;;;;;ACdA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;AAWA;;;AAGA;AACA;;;;;;;;;;ACZA;AACA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;ACXA;AACA;;;;;;AAMA;;;AAGA;AACA;;;AAKA;AACA","sources":["webpack://@toshusai/app-ui/./src/panel/__stories__/ExampleDiv.tsx","webpack://@toshusai/app-ui/./src/panel/HPanel.tsx","webpack://@toshusai/app-ui/./src/panel/VPanel.tsx","webpack://@toshusai/app-ui/./src/styled/IconButton.tsx","webpack://@toshusai/app-ui/./src/styled/StyledInput.tsx","webpack://@toshusai/app-ui/./src/styled/ToolTip.tsx","webpack://@toshusai/app-ui/./src/styled/StyledCheckbox.tsx","webpack://@toshusai/app-ui/./src/styled/StyledSelect.tsx","webpack://@toshusai/app-ui/./src/styled/StyledTextarea.tsx","webpack://@toshusai/app-ui/./src/styled/Button.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { COLOR_BACKGROUND_2_NAME, COLOR_BACKGROUND_NAME } from \"../../styled\";\n\nexport const Root = styled.div`\n  width: 100%;\n  height: 256px;\n`;\n\nexport const ExampleDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(${COLOR_BACKGROUND_NAME});\n`;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport { getDragHander } from \"../utils/getDragHander\";\n\nimport { DividerBox } from \"./DividerBox\";\n\nconst HPanelDivider = styled.div`\n  min-width: 4px;\n  min-height: 100%;\n  background-color: var(--color-panel-divider);\n  cursor: col-resize;\n  user-select: none;\n`;\n\nconst HBoxRoot = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const HPanel: FC<{\n  left: React.ReactNode;\n  right: React.ReactNode;\n  defaultRate?: number;\n}> = (props) => {\n  const [rate, setRate] = React.useState(props.defaultRate ?? 0.5);\n  const leftWidth = `calc(${rate * 100}% - 2px)`;\n  const rightWidth = `calc(${(1 - rate) * 100}% - 2px)`;\n  const handleMouseDown = getDragHander((ctx) => {\n    const { diffX } = ctx;\n    const el = ctx.startEvent.target as HTMLElement;\n    const ctxWidth = el.parentElement?.clientWidth ?? 0;\n    const newRate = Math.max(0, Math.min(1, rate + diffX / ctxWidth));\n    setRate(newRate);\n  });\n  return (\n    <HBoxRoot>\n      <DividerBox\n        style={{\n          width: leftWidth,\n        }}\n      >\n        {props.left}\n      </DividerBox>\n      <HPanelDivider onMouseDown={handleMouseDown} />\n      <DividerBox\n        style={{\n          width: rightWidth,\n        }}\n      >\n        {props.right}\n      </DividerBox>\n    </HBoxRoot>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport { getDragHander } from \"../utils/getDragHander\";\n\nimport { DividerBox } from \"./DividerBox\";\n\nconst VPanelDivider = styled.div`\n  width: 100%;\n  min-height: 4px;\n  background-color: var(--color-panel-divider);\n  cursor: row-resize;\n  user-select: none;\n`;\n\nconst VPanelBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const VPanel: FC<{\n  top: React.ReactNode;\n  bottom: React.ReactNode;\n  defaultRate?: number;\n}> = (props) => {\n  const [rate, setRate] = React.useState(props.defaultRate ?? 0.5);\n  const topHeight = `calc(${(rate * 100)}% - 2px)`;\n  const bottomHeight = `calc(${(1 - rate) * 100}% - 2px)`;\n  const handleMouseDown = getDragHander((ctx) => {\n    const { diffY } = ctx;\n    const el = ctx.startEvent.target as HTMLElement;\n    const ctxWidth = el.parentElement?.clientHeight ?? 0;\n    const newRate = Math.max(0, Math.min(1, rate + diffY / ctxWidth));\n    setRate(newRate);\n  });\n  return (\n    <VPanelBox>\n      <DividerBox\n        style={{\n          height: topHeight,\n        }}\n      >\n        {props.top}\n      </DividerBox>\n      <VPanelDivider onMouseDown={handleMouseDown} />\n      <DividerBox\n        style={{\n          height: bottomHeight,\n        }}\n      >\n        {props.bottom}\n      </DividerBox>\n    </VPanelBox>\n  );\n};\n","import styled from \"styled-components\";\n\nimport { BottomToolTip, ToolTip } from \"./ToolTip\";\nimport { COLOR_BORDER_NAME, COLOR_BUTTON_BACKGROUND_NAME } from \"./GlobalStyle\";\n\nexport const IconButton = styled.button`\n  position: relative;\n  padding: 0;\n  width: 16px;\n  min-width: 16px;\n  min-height: 16px;\n  height: 16px;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  cursor: pointer;\n  display: flex;\n  border-radius: 4px;\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  user-select: none;\n\n  :hover > ${ToolTip} {\n    opacity: 1;\n  }\n  :hover > ${BottomToolTip} {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  ${IconButton}:first-child {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  ${IconButton}:last-child {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n","import styled from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_INPUT_BACKGROUND_NAME,\n} from \"./GlobalStyle\";\n\nexport const StyledInput = styled.input`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 128px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n\n  font-family: \"Ricty Diminished\";\n`;\n","import styled, { css } from \"styled-components\";\nimport { COLOR_BACKGROUND_2_NAME } from \"./GlobalStyle\";\n\nconst toolTipBase = css`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 4px 8px;\n  border-radius: 4px;\n  background-color: var(${COLOR_BACKGROUND_2_NAME});\n  color: var(--color-text);\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 10000;\n  opacity: 0;\n  transition: opacity 0.2s;\n  pointer-events: none;\n`;\n\nexport const ToolTip = styled.div`\n  ${toolTipBase}\n  top: calc(-100% + -16px);\n`;\nexport const BottomToolTip = styled.div`\n  ${toolTipBase}\n  bottom: calc(-100% + -16px);\n`;\n","import styled from \"styled-components\";\nimport { COLOR_BORDER_NAME, COLOR_BUTTON_BACKGROUND_NAME } from \"./GlobalStyle\";\n\nexport const StyledCheckbox = styled.input`\n  margin: 0;\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  border-radius: 2px;\n  height: 16px;\n  width: 16px;\n  padding-left: 8px;\n  appearance: none;\n  position: relative;\n  :checked {\n    &:after {\n      content: \"✔︎\";\n      position: absolute;\n      left: 2px;\n      top: 1px;\n      font-size: 12px;\n      color: white;\n      transition: all 0.2s; /* on prévoit une animation */\n    }\n    accent-color: red;\n    background: red;\n  }\n`;\n","import styled from \"styled-components\";\nimport { COLOR_BORDER_NAME, COLOR_INPUT_BACKGROUND_DISABLED_NAME, COLOR_INPUT_BACKGROUND_FOCUS_NAME, COLOR_INPUT_BACKGROUND_NAME, COLOR_TEXT_DISABLED_NAME } from \"./GlobalStyle\";\n\nexport const StyledSelect = styled.select`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 128px;\n  width: 128px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n  :disabled {\n    background-color: var(${COLOR_INPUT_BACKGROUND_DISABLED_NAME});\n    color: var(${COLOR_TEXT_DISABLED_NAME});\n  }\n  font-family: \"Ricty Diminished\";\n`;\n","import styled from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_INPUT_BACKGROUND_NAME,\n} from \"./GlobalStyle\";\n\nexport const StyledTextarea = styled.textarea`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 256px;\n\n  resize: none;\n  height: 42px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n    border-top-right-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n\n  font-family: \"Ricty Diminished\";\n`;\n","import styled, { css } from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_BUTTON_BACKGROUND_NAME,\n  COLOR_INPUT_BACKGROUND_DISABLED_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_TEXT_DISABLED_NAME,\n} from \"./GlobalStyle\";\n\nexport const buttonCss = css`\n  cursor: pointer;\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  border-radius: 4px;\n  height: 16px;\n  padding-left: 8px;\n  max-width: 128px;\n  :active {\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n  :disabled {\n    background-color: var(${COLOR_INPUT_BACKGROUND_DISABLED_NAME});\n    color: var(${COLOR_TEXT_DISABLED_NAME});\n  }\n  font-family: \"Ricty Diminished\";\n`;\n\nexport const Button = styled.button`\n  ${buttonCss}\n`;\n"],"names":[],"sourceRoot":""}