{"version":3,"file":"ToolBarMenu-index-stories.450cf276.iframe.bundle.js","mappings":";AAIA;;;;;;;;;AASA;;;;;;;;;ACCA;AACA;;;AAGA;;;;;;ACiBA;;;AAIA;AAGA;;;;;;;;AC7BA;;ACSA;AACA;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;;;;AAIA;;;AAGA;;;AAGA;;;AAKA;;AAEA;;;;AAIA;;;;;;;;;;;;;;;ACnBA;AACA;;;;;;;;;;AAUA;;;;;;;;;;AChBA;;;;;;;;AAUA;AACA;;AAGA;AACA;;;;;;;;;ACdA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;AAWA;;;AAGA;AACA;;;;;;;;;;ACZA;AACA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;ACXA;AACA;;;;;;AAMA;;;AAGA;AACA;;;AAKA;AACA","sources":["webpack://@toshusai/app-ui/./src/ToolbarButton.tsx","webpack://@toshusai/app-ui/./src/DropdownMenu.tsx","webpack://@toshusai/app-ui/./src/Menu/MenuItemBase.tsx","webpack://@toshusai/app-ui/./src/Menu/MenuItem.tsx","webpack://@toshusai/app-ui/./src/context_menu/ContextMenu.tsx","webpack://@toshusai/app-ui/./src/styled/IconButton.tsx","webpack://@toshusai/app-ui/./src/styled/StyledInput.tsx","webpack://@toshusai/app-ui/./src/styled/ToolTip.tsx","webpack://@toshusai/app-ui/./src/styled/StyledCheckbox.tsx","webpack://@toshusai/app-ui/./src/styled/StyledSelect.tsx","webpack://@toshusai/app-ui/./src/styled/StyledTextarea.tsx","webpack://@toshusai/app-ui/./src/styled/Button.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { COLOR_BACKGROUND_2_NAME, COLOR_BACKGROUND_NAME } from \"./styled\";\n\nexport const ToolbarButton = styled.button`\n  background-color: var(${COLOR_BACKGROUND_2_NAME});\n  color: var(--color-text);\n  border: 0;\n  padding: 2px 8px;\n  height: 16px;\n  font-size: 12px;\n  font-family: \"Ricty Diminished\";\n  cursor: pointer;\n  :hover {\n    background-color: var(${COLOR_BACKGROUND_NAME});\n  }\n`;\n","import styled from \"styled-components\";\nimport {\n  COLOR_BACKGROUND_2_NAME,\n  COLOR_BACKGROUND_NAME,\n  COLOR_BORDER_NAME,\n} from \"./styled\";\n\nexport const DropdownMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 10000;\n  top: 16px;\n  left: 0;\n  background-color: var(${COLOR_BACKGROUND_NAME});\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  border-radius: 4px;\n  padding: 4px;\n  box-shadow: 0px 0px 4px 0px var(${COLOR_BACKGROUND_2_NAME});\n  white-space: nowrap;\n`;\n","import { type IconProps } from \"tabler-icons-react\";\n\nimport { iconProps } from \"../iconProps\";\nimport styled from \"styled-components\";\n\nexport function MenuItemBase(props: {\n  leftIcon?: React.FC<IconProps>;\n  text: string;\n  children?: React.ReactNode;\n}) {\n  return (\n    <Root>\n      <Flex>\n        {props.leftIcon &&\n          props.leftIcon({\n            ...iconProps,\n            style: {\n              ...iconProps.style,\n              margin: \"\",\n            },\n          })}\n        <MenuItemWrapper $hasLeftIcon={props.leftIcon !== undefined}>\n          {props.text}\n        </MenuItemWrapper>\n      </Flex>\n      {props.children}\n    </Root>\n  );\n}\nconst Root = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  gap: 2px;\n`;\nconst MenuItemWrapper = styled.div<{\n  $hasLeftIcon: boolean;\n}>`\n  padding-left: ${(props) => (props.$hasLeftIcon ? 0 : 12)}px;\n  padding-right: 8px;\n`;\n","import styled from \"styled-components\";\nimport { type IconProps } from \"tabler-icons-react\";\n\nimport { MenuItemBase } from \"./MenuItemBase\";\n\nconst MenuItemShortcut = styled.div`\n  color: rgba(255, 255, 255, 0.5);\n  display: flex;\n  white-space: nowrap;\n  justify-content: space-between;\n  padding-right: 12px;\n`;\n\nexport function MenuItem(props: {\n  leftIcon?: React.FC<IconProps>;\n  text: string;\n  shortcut?: string;\n}) {\n  return (\n    <MenuItemBase text={props.text} leftIcon={props.leftIcon}>\n      <MenuItemShortcut>{props.shortcut}</MenuItemShortcut>\n    </MenuItemBase>\n  );\n}\n","import React, { PropsWithChildren, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { COLOR_BACKGROUND_2_NAME, COLOR_BORDER_NAME } from \"../styled\";\n\ninterface ContextMenuProps {\n  show: boolean;\n  e?: React.MouseEvent<HTMLDivElement, MouseEvent>;\n  onClose: () => void;\n}\n\nconst StyledDiv = styled.div.attrs<{\n  x: number;\n  y: number;\n}>((p) => {\n  return {\n    style: {\n      left: p.x + \"px\",\n      top: p.y + \"px\",\n    },\n  };\n})<{ x: number; y: number }>`\n  position: fixed;\n  background-color: var(${COLOR_BACKGROUND_2_NAME});\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  color: var(--color-text);\n  font-size: 12px;\n  line-height: 12px;\n  border-radius: 4px;\n  padding: 4px 4px;\n  z-index: 10000;\n`;\n\nexport const ContextMenu: React.FC<PropsWithChildren<ContextMenuProps>> = (\n  props\n) => {\n  const ref = useRef<HTMLDivElement>(null);\n  if (!props.show) return null;\n  const mouseDown = (e: MouseEvent) => {\n    if (ref.current?.contains(e.target as Node)) {\n      return;\n    }\n    props.onClose();\n    window.removeEventListener(\"mousedown\", mouseDown);\n  };\n  window.addEventListener(\"mousedown\", mouseDown);\n  return (\n    <>\n      <Overlay />\n      <StyledDiv x={props.e?.pageX ?? 0} y={props.e?.pageY || 0} ref={ref}>\n        {props.children}\n      </StyledDiv>\n    </>\n  );\n};\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1000;\n  background-color: rgba(0, 0, 0, 0.1);\n`;\n","import styled from \"styled-components\";\n\nimport { BottomToolTip, ToolTip } from \"./ToolTip\";\nimport { COLOR_BORDER_NAME, COLOR_BUTTON_BACKGROUND_NAME } from \"./GlobalStyle\";\n\nexport const IconButton = styled.button`\n  position: relative;\n  padding: 0;\n  width: 16px;\n  min-width: 16px;\n  min-height: 16px;\n  height: 16px;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  cursor: pointer;\n  display: flex;\n  border-radius: 4px;\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  user-select: none;\n\n  :hover > ${ToolTip} {\n    opacity: 1;\n  }\n  :hover > ${BottomToolTip} {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  ${IconButton}:first-child {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  ${IconButton}:last-child {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n","import styled from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_INPUT_BACKGROUND_NAME,\n} from \"./GlobalStyle\";\n\nexport const StyledInput = styled.input`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 128px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n\n  font-family: \"Ricty Diminished\";\n`;\n","import styled, { css } from \"styled-components\";\nimport { COLOR_BACKGROUND_2_NAME } from \"./GlobalStyle\";\n\nconst toolTipBase = css`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 4px 8px;\n  border-radius: 4px;\n  background-color: var(${COLOR_BACKGROUND_2_NAME});\n  color: var(--color-text);\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 10000;\n  opacity: 0;\n  transition: opacity 0.2s;\n  pointer-events: none;\n`;\n\nexport const ToolTip = styled.div`\n  ${toolTipBase}\n  top: calc(-100% + -16px);\n`;\nexport const BottomToolTip = styled.div`\n  ${toolTipBase}\n  bottom: calc(-100% + -16px);\n`;\n","import styled from \"styled-components\";\nimport { COLOR_BORDER_NAME, COLOR_BUTTON_BACKGROUND_NAME } from \"./GlobalStyle\";\n\nexport const StyledCheckbox = styled.input`\n  margin: 0;\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  border-radius: 2px;\n  height: 16px;\n  width: 16px;\n  padding-left: 8px;\n  appearance: none;\n  position: relative;\n  :checked {\n    &:after {\n      content: \"✔︎\";\n      position: absolute;\n      left: 2px;\n      top: 1px;\n      font-size: 12px;\n      color: white;\n      transition: all 0.2s; /* on prévoit une animation */\n    }\n    accent-color: red;\n    background: red;\n  }\n`;\n","import styled from \"styled-components\";\nimport { COLOR_BORDER_NAME, COLOR_INPUT_BACKGROUND_DISABLED_NAME, COLOR_INPUT_BACKGROUND_FOCUS_NAME, COLOR_INPUT_BACKGROUND_NAME, COLOR_TEXT_DISABLED_NAME } from \"./GlobalStyle\";\n\nexport const StyledSelect = styled.select`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 128px;\n  width: 128px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n  :disabled {\n    background-color: var(${COLOR_INPUT_BACKGROUND_DISABLED_NAME});\n    color: var(${COLOR_TEXT_DISABLED_NAME});\n  }\n  font-family: \"Ricty Diminished\";\n`;\n","import styled from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_INPUT_BACKGROUND_NAME,\n} from \"./GlobalStyle\";\n\nexport const StyledTextarea = styled.textarea`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 256px;\n\n  resize: none;\n  height: 42px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n    border-top-right-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n\n  font-family: \"Ricty Diminished\";\n`;\n","import styled, { css } from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_BUTTON_BACKGROUND_NAME,\n  COLOR_INPUT_BACKGROUND_DISABLED_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_TEXT_DISABLED_NAME,\n} from \"./GlobalStyle\";\n\nexport const buttonCss = css`\n  cursor: pointer;\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  border-radius: 4px;\n  height: 16px;\n  padding-left: 8px;\n  max-width: 128px;\n  :active {\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n  :disabled {\n    background-color: var(${COLOR_INPUT_BACKGROUND_DISABLED_NAME});\n    color: var(${COLOR_TEXT_DISABLED_NAME});\n  }\n  font-family: \"Ricty Diminished\";\n`;\n\nexport const Button = styled.button`\n  ${buttonCss}\n`;\n"],"names":[],"sourceRoot":""}