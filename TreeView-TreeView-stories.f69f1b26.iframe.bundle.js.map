{"version":3,"file":"TreeView-TreeView-stories.f69f1b26.iframe.bundle.js","mappings":";;;AA2CA;;;AAGA;;;;AAKA;;;;;;ACUA;;;;;;;AAOA;AACA;;;;AAMA;;;;;;;;;;;;;AC/DA;;;;AAIA;;;AAGA;;;AAGA;;;AAKA;;AAEA;;;;AAIA;;;;;;;;;;;;;;;ACnBA;AACA;;;;;;;;;;AAUA;;;;;;;;;;AChBA;;;;;;;;AAUA;AACA;;AAGA;AACA;;;;;;;;;ACdA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;AAWA;;;AAGA;AACA;;;;;;;;;;ACZA;AACA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;ACXA;AACA;;;;;;AAMA;;;AAGA;AACA;;;AAKA;AACA","sources":["webpack://@toshusai/app-ui/./src/TreeView/TreeItem.tsx","webpack://@toshusai/app-ui/./src/TreeView/DirectoryTreeItem.tsx","webpack://@toshusai/app-ui/./src/styled/IconButton.tsx","webpack://@toshusai/app-ui/./src/styled/StyledInput.tsx","webpack://@toshusai/app-ui/./src/styled/ToolTip.tsx","webpack://@toshusai/app-ui/./src/styled/StyledCheckbox.tsx","webpack://@toshusai/app-ui/./src/styled/StyledSelect.tsx","webpack://@toshusai/app-ui/./src/styled/StyledTextarea.tsx","webpack://@toshusai/app-ui/./src/styled/Button.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  COLOR_BUTTON_BACKGROUND_NAME,\n  COLOR_FOCUS_NAME,\n  COLOR_HOVER_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n} from \"../styled\";\n\nexport type TreeViewItem<T> = {\n  id: string;\n  children?: TreeViewItem<T>[];\n  data: T;\n};\n\nexport const NEST_SPACE = 6;\n\nexport function TreeItem<T>(\n  props: {\n    children: React.ReactNode;\n    depth?: number;\n    selected?: boolean;\n  } & React.HTMLAttributes<HTMLLIElement>\n) {\n  const { children, depth, ...rest } = props;\n  return (\n    <TreeItemRoot\n      selected={props.selected}\n      padding={props.depth ? props.depth * NEST_SPACE : 0}\n      {...rest}\n    >\n      {props.children}\n    </TreeItemRoot>\n  );\n}\n\nconst TreeItemRoot = styled.li<{\n  padding: number;\n  selected?: boolean;\n}>`\n  display: flex;\n  cursor: pointer;\n  padding-left: ${(props) => props.padding}px;\n  height: 12px;\n  line-height: 12px;\n  background-color: ${(props) =>\n    props.selected ? `var(${COLOR_FOCUS_NAME})` : \"transparent\"};\n  font-family: \"Roboto Mono\", monospace;\n\n  :hover {\n    background-color: ${(props) =>\n      props.selected ? `var(${COLOR_FOCUS_NAME})` : `var(${COLOR_HOVER_NAME})`};\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { NEST_SPACE, TreeItem, TreeViewItem } from \"./TreeItem\";\nimport { TreeView, WithTreeItemEvent } from \"./TreeView\";\nimport { useIsSelectedItem } from \"./useIsSelectedItem\";\n\nexport const DirectoryTreeItem = React.memo(function DirectoryTreeView<\n  U,\n  T extends TreeViewItem<U>\n>(props: {\n  item: T;\n  depth?: number;\n  renderItem: (item: T) => React.ReactNode;\n  onMouseDown?: WithTreeItemEvent<U, T>;\n  onMouseMove?: WithTreeItemEvent<U, T>;\n  onMouseUp?: WithTreeItemEvent<U, T>;\n  onClick?: WithTreeItemEvent<U, T>;\n}) {\n  const [open, setOpen] = useState(true);\n  const depth = props.depth ?? 0;\n  const isSelected = useIsSelectedItem(props.item);\n  return (\n    <TreeViewRootUl>\n      <TreeItem\n        depth={depth}\n        selected={isSelected}\n        onMouseDown={(e) => props.onMouseDown?.(props.item, e)}\n        onMouseMove={(e) => props.onMouseMove?.(props.item, e)}\n        onMouseUp={(e) => props.onMouseUp?.(props.item, e)}\n        onClick={(e) => props.onClick?.(props.item, e)}\n      >\n        {(props.item.children?.length ?? 0) > 0 ? (\n          <Button onClick={() => setOpen(!open)}>{open ? \"-\" : \"+\"}</Button>\n        ) : (\n          <Button style={{ visibility: \"hidden\" }}>-</Button>\n        )}\n        <PointerEventsNone>{props.renderItem(props.item)}</PointerEventsNone>\n      </TreeItem>\n      {open && (\n        <TreeView\n          depth={depth + 1}\n          items={props.item.children}\n          renderItem={props.renderItem as any}\n          onMouseMove={props.onMouseMove as any}\n          onMouseDown={props.onMouseDown as any}\n          onMouseUp={props.onMouseUp as any}\n          onClick={props.onClick as any}\n        />\n      )}\n    </TreeViewRootUl>\n  );\n});\n\nexport const PointerEventsNone = styled.div`\n  pointer-events: none;\n  display: flex;\n  width: calc(100% - 12px);\n`;\n\n\nconst Button = styled.button`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  color: var(--color-text);\n  width: ${NEST_SPACE}px;\n  min-width: ${NEST_SPACE}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TreeViewRootUl = styled.ul`\n  padding: 0;\n  margin: 0;\n\n  user-select: none;\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nimport { BottomToolTip, ToolTip } from \"./ToolTip\";\nimport { COLOR_BORDER_NAME, COLOR_BUTTON_BACKGROUND_NAME } from \"./GlobalStyle\";\n\nexport const IconButton = styled.button`\n  position: relative;\n  padding: 0;\n  width: 16px;\n  min-width: 16px;\n  min-height: 16px;\n  height: 16px;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  cursor: pointer;\n  display: flex;\n  border-radius: 4px;\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  user-select: none;\n\n  :hover > ${ToolTip} {\n    opacity: 1;\n  }\n  :hover > ${BottomToolTip} {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  ${IconButton}:first-child {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  ${IconButton}:last-child {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n","import styled from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_INPUT_BACKGROUND_NAME,\n} from \"./GlobalStyle\";\n\nexport const StyledInput = styled.input`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 128px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n\n  font-family: \"Ricty Diminished\";\n`;\n","import styled, { css } from \"styled-components\";\nimport { COLOR_BACKGROUND_2_NAME } from \"./GlobalStyle\";\n\nconst toolTipBase = css`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 4px 8px;\n  border-radius: 4px;\n  background-color: var(${COLOR_BACKGROUND_2_NAME});\n  color: var(--color-text);\n  font-size: 12px;\n  white-space: nowrap;\n  z-index: 10000;\n  opacity: 0;\n  transition: opacity 0.2s;\n  pointer-events: none;\n`;\n\nexport const ToolTip = styled.div`\n  ${toolTipBase}\n  top: calc(-100% + -16px);\n`;\nexport const BottomToolTip = styled.div`\n  ${toolTipBase}\n  bottom: calc(-100% + -16px);\n`;\n","import styled from \"styled-components\";\nimport { COLOR_BORDER_NAME, COLOR_BUTTON_BACKGROUND_NAME } from \"./GlobalStyle\";\n\nexport const StyledCheckbox = styled.input`\n  margin: 0;\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  border-radius: 2px;\n  height: 16px;\n  width: 16px;\n  padding-left: 8px;\n  appearance: none;\n  position: relative;\n  :checked {\n    &:after {\n      content: \"✔︎\";\n      position: absolute;\n      left: 2px;\n      top: 1px;\n      font-size: 12px;\n      color: white;\n      transition: all 0.2s; /* on prévoit une animation */\n    }\n    accent-color: red;\n    background: red;\n  }\n`;\n","import styled from \"styled-components\";\nimport { COLOR_BORDER_NAME, COLOR_INPUT_BACKGROUND_DISABLED_NAME, COLOR_INPUT_BACKGROUND_FOCUS_NAME, COLOR_INPUT_BACKGROUND_NAME, COLOR_TEXT_DISABLED_NAME } from \"./GlobalStyle\";\n\nexport const StyledSelect = styled.select`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 128px;\n  width: 128px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n  :disabled {\n    background-color: var(${COLOR_INPUT_BACKGROUND_DISABLED_NAME});\n    color: var(${COLOR_TEXT_DISABLED_NAME});\n  }\n  font-family: \"Ricty Diminished\";\n`;\n","import styled from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_INPUT_BACKGROUND_NAME,\n} from \"./GlobalStyle\";\n\nexport const StyledTextarea = styled.textarea`\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_INPUT_BACKGROUND_NAME});\n  border-radius: 8px;\n  height: 16px;\n  padding-left: 8px;\n  caret-color: red;\n  max-width: 256px;\n\n  resize: none;\n  height: 42px;\n\n  :focus {\n    outline: none;\n    border-radius: 8px;\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n    border-top-right-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n\n  font-family: \"Ricty Diminished\";\n`;\n","import styled, { css } from \"styled-components\";\nimport {\n  COLOR_BORDER_NAME,\n  COLOR_BUTTON_BACKGROUND_NAME,\n  COLOR_INPUT_BACKGROUND_DISABLED_NAME,\n  COLOR_INPUT_BACKGROUND_FOCUS_NAME,\n  COLOR_TEXT_DISABLED_NAME,\n} from \"./GlobalStyle\";\n\nexport const buttonCss = css`\n  cursor: pointer;\n  display: block;\n  color: var(--color-text);\n  box-sizing: border-box;\n  font-size: 12px;\n  line-height: 12px;\n  margin: 0;\n  border: 1px solid var(${COLOR_BORDER_NAME});\n  background-color: var(${COLOR_BUTTON_BACKGROUND_NAME});\n  border-radius: 4px;\n  height: 16px;\n  padding-left: 8px;\n  max-width: 128px;\n  :active {\n    background-color: var(${COLOR_INPUT_BACKGROUND_FOCUS_NAME});\n  }\n  :disabled {\n    background-color: var(${COLOR_INPUT_BACKGROUND_DISABLED_NAME});\n    color: var(${COLOR_TEXT_DISABLED_NAME});\n  }\n  font-family: \"Ricty Diminished\";\n`;\n\nexport const Button = styled.button`\n  ${buttonCss}\n`;\n"],"names":[],"sourceRoot":""}